<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="POM Hands-On" duration-ms="137" started-at="2020-04-12T13:52:49Z" finished-at="2020-04-12T13:52:49Z">
    <groups>
    </groups>
    <test name="POM TestNG" duration-ms="137" started-at="2020-04-12T13:52:49Z" finished-at="2020-04-12T13:52:49Z">
      <class name="tests.TestBase">
        <test-method status="FAIL" signature="initialize()[pri:0, instance:tests.TestBase@42d3bd8b]" name="initialize" is-config="true" duration-ms="0" started-at="2020-04-12T19:22:49Z" finished-at="2020-04-12T19:22:49Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Automation\DriverFiles\chromedriver_win32\chromerdriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Automation\DriverFiles\chromedriver_win32\chromerdriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:116)
	at tests.TestBase.initialize(TestBase.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="SKIP" signature="closeApp()[pri:0, instance:tests.TestBase@42d3bd8b]" name="closeApp" is-config="true" duration-ms="0" started-at="2020-04-12T19:22:49Z" finished-at="2020-04-12T19:22:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- tests.TestBase -->
      <class name="tests.OrderPlacement">
        <test-method status="SKIP" signature="init()[pri:0, instance:tests.OrderPlacement@13fee20c]" name="init" duration-ms="1" started-at="2020-04-12T19:22:49Z" finished-at="2020-04-12T19:22:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
      </class> <!-- tests.OrderPlacement -->
    </test> <!-- POM TestNG -->
  </suite> <!-- POM Hands-On -->
</testng-results>
